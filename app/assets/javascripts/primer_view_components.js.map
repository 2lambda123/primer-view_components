{"version":3,"file":"primer_view_components.js","sources":["../../../node_modules/@github/tab-container-element/dist/index.js"],"sourcesContent":["export default class TabContainerElement extends HTMLElement {\n    constructor() {\n        super();\n        this.addEventListener('keydown', (event) => {\n            const target = event.target;\n            if (!(target instanceof HTMLElement))\n                return;\n            if (target.getAttribute('role') !== 'tab' && !target.closest('[role=\"tablist\"]'))\n                return;\n            const tabs = Array.from(this.querySelectorAll('[role=\"tablist\"] [role=\"tab\"]'));\n            const currentIndex = tabs.indexOf(tabs.find(tab => tab.matches('[aria-selected=\"true\"]')));\n            if (event.code === 'ArrowRight') {\n                let index = currentIndex + 1;\n                if (index >= tabs.length)\n                    index = 0;\n                selectTab(this, index);\n            }\n            else if (event.code === 'ArrowLeft') {\n                let index = currentIndex - 1;\n                if (index < 0)\n                    index = tabs.length - 1;\n                selectTab(this, index);\n            }\n            else if (event.code === 'Home') {\n                selectTab(this, 0);\n                event.preventDefault();\n            }\n            else if (event.code === 'End') {\n                selectTab(this, tabs.length - 1);\n                event.preventDefault();\n            }\n        });\n        this.addEventListener('click', (event) => {\n            const tabs = Array.from(this.querySelectorAll('[role=\"tablist\"] [role=\"tab\"]'));\n            if (!(event.target instanceof Element))\n                return;\n            const tab = event.target.closest('[role=\"tab\"]');\n            if (!tab || !tab.closest('[role=\"tablist\"]'))\n                return;\n            const index = tabs.indexOf(tab);\n            selectTab(this, index);\n        });\n    }\n    connectedCallback() {\n        for (const tab of this.querySelectorAll('[role=\"tablist\"] [role=\"tab\"]')) {\n            if (!tab.hasAttribute('aria-selected')) {\n                tab.setAttribute('aria-selected', 'false');\n            }\n            if (!tab.hasAttribute('tabindex')) {\n                if (tab.getAttribute('aria-selected') === 'true') {\n                    tab.setAttribute('tabindex', '0');\n                }\n                else {\n                    tab.setAttribute('tabindex', '-1');\n                }\n            }\n        }\n    }\n}\nfunction selectTab(tabContainer, index) {\n    const tabs = tabContainer.querySelectorAll('[role=\"tablist\"] [role=\"tab\"]');\n    const panels = tabContainer.querySelectorAll('[role=\"tabpanel\"]');\n    const selectedTab = tabs[index];\n    const selectedPanel = panels[index];\n    const cancelled = !tabContainer.dispatchEvent(new CustomEvent('tab-container-change', {\n        bubbles: true,\n        cancelable: true,\n        detail: { relatedTarget: selectedPanel }\n    }));\n    if (cancelled)\n        return;\n    for (const tab of tabs) {\n        tab.setAttribute('aria-selected', 'false');\n        tab.setAttribute('tabindex', '-1');\n    }\n    for (const panel of panels) {\n        panel.hidden = true;\n        if (!panel.hasAttribute('tabindex') && !panel.hasAttribute('data-tab-container-no-tabstop')) {\n            panel.setAttribute('tabindex', '0');\n        }\n    }\n    selectedTab.setAttribute('aria-selected', 'true');\n    selectedTab.setAttribute('tabindex', '0');\n    selectedTab.focus();\n    selectedPanel.hidden = false;\n    tabContainer.dispatchEvent(new CustomEvent('tab-container-changed', {\n        bubbles: true,\n        detail: { relatedTarget: selectedPanel }\n    }));\n}\nif (!window.customElements.get('tab-container')) {\n    window.TabContainerElement = TabContainerElement;\n    window.customElements.define('tab-container', TabContainerElement);\n}\n//# sourceMappingURL=index.js.map"],"names":["TabContainerElement","HTMLElement","[object Object]","super","this","addEventListener","event","target","getAttribute","closest","tabs","Array","from","querySelectorAll","currentIndex","indexOf","find","tab","matches","code","index","length","selectTab","preventDefault","Element","hasAttribute","setAttribute","tabContainer","panels","selectedTab","selectedPanel","dispatchEvent","CustomEvent","bubbles","cancelable","detail","relatedTarget","panel","hidden","focus","window","customElements","get","define"],"mappings":"AAAe,MAAMA,UAA4BC,YAC7CC,cACIC,QACAC,KAAKC,iBAAiB,WAAYC,IAC9B,MAAMC,EAASD,EAAMC,OACrB,KAAMA,aAAkBN,aACpB,OACJ,GAAoC,QAAhCM,EAAOC,aAAa,UAAsBD,EAAOE,QAAQ,oBACzD,OACJ,MAAMC,EAAOC,MAAMC,KAAKR,KAAKS,iBAAiB,kCACxCC,EAAeJ,EAAKK,QAAQL,EAAKM,MAAKC,GAAOA,EAAIC,QAAQ,6BAC/D,GAAmB,eAAfZ,EAAMa,KAAuB,CAC7B,IAAIC,EAAQN,EAAe,EACvBM,GAASV,EAAKW,SACdD,EAAQ,GACZE,EAAUlB,KAAMgB,QAEf,GAAmB,cAAfd,EAAMa,KAAsB,CACjC,IAAIC,EAAQN,EAAe,EACvBM,EAAQ,IACRA,EAAQV,EAAKW,OAAS,GAC1BC,EAAUlB,KAAMgB,OAEI,SAAfd,EAAMa,MACXG,EAAUlB,KAAM,GAChBE,EAAMiB,kBAEc,QAAfjB,EAAMa,OACXG,EAAUlB,KAAMM,EAAKW,OAAS,GAC9Bf,EAAMiB,qBAGdnB,KAAKC,iBAAiB,SAAUC,IAC5B,MAAMI,EAAOC,MAAMC,KAAKR,KAAKS,iBAAiB,kCAC9C,KAAMP,EAAMC,kBAAkBiB,SAC1B,OACJ,MAAMP,EAAMX,EAAMC,OAAOE,QAAQ,gBACjC,IAAKQ,IAAQA,EAAIR,QAAQ,oBACrB,OAEJa,EAAUlB,KADIM,EAAKK,QAAQE,OAInCf,oBACI,IAAK,MAAMe,KAAOb,KAAKS,iBAAiB,iCAC/BI,EAAIQ,aAAa,kBAClBR,EAAIS,aAAa,gBAAiB,SAEjCT,EAAIQ,aAAa,cACwB,SAAtCR,EAAIT,aAAa,iBACjBS,EAAIS,aAAa,WAAY,KAG7BT,EAAIS,aAAa,WAAY,QAMjD,SAASJ,EAAUK,EAAcP,GAC7B,MAAMV,EAAOiB,EAAad,iBAAiB,iCACrCe,EAASD,EAAad,iBAAiB,qBACvCgB,EAAcnB,EAAKU,GACnBU,EAAgBF,EAAOR,GAM7B,KALmBO,EAAaI,cAAc,IAAIC,YAAY,uBAAwB,CAClFC,SAAS,EACTC,YAAY,EACZC,OAAQ,CAAEC,cAAeN,MAE7B,CAEA,IAAK,MAAMb,KAAOP,EACdO,EAAIS,aAAa,gBAAiB,SAClCT,EAAIS,aAAa,WAAY,MAEjC,IAAK,MAAMW,KAAST,EAChBS,EAAMC,QAAS,EACVD,EAAMZ,aAAa,aAAgBY,EAAMZ,aAAa,kCACvDY,EAAMX,aAAa,WAAY,KAGvCG,EAAYH,aAAa,gBAAiB,QAC1CG,EAAYH,aAAa,WAAY,KACrCG,EAAYU,QACZT,EAAcQ,QAAS,EACvBX,EAAaI,cAAc,IAAIC,YAAY,wBAAyB,CAChEC,SAAS,EACTE,OAAQ,CAAEC,cAAeN,OAG5BU,OAAOC,eAAeC,IAAI,mBAC3BF,OAAOxC,oBAAsBA,EAC7BwC,OAAOC,eAAeE,OAAO,gBAAiB3C"}